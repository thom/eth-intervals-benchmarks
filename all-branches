#!/bin/bash
: ${2?"Usage: $0 HOST CORES [STATS]. Warning: Removes old benchmark logs results/${HOST}-20*"}

HOST=$1
CORES=$2

if [ -z ${3} ]
then
	STATS=false
else
	STATS=true
fi

branches=(
	# Lazy deques
	lazy-deque-orig
	lazy-deque-cas

	# Dynamic circular deques
	dynamic-circular-deque
	dynamic-circular-deque-rta

	# Duplicating queues
	duplicating-queue

	# Idempotent queues
	idempotent-fifo-queue
	idempotent-fifo-queue-no-steal-loop
	idempotent-lifo-queue
	idempotent-lifo-queue-no-steal-loop
	idempotent-deque
	idempotent-deque-no-steal-loop

	# Work-stealing lazy deque
	work-stealing-lazy-deque

	# Work-stealing deque
	work-stealing-deque
	work-stealing-deque-lazy-top
	work-stealing-deque-no-steal-loop
	work-stealing-deque-no-steal-loop-lazy-top

	# Duplicating work-stealing deque
	duplicating-work-stealing-deque

	# Idempotent work-stealing deque
	idempotent-work-stealing-deque
	idempotent-work-stealing-deque-no-steal-loop

	# Dynamic work-stealing deque
	dynamic-work-stealing-deque
	dynamic-work-stealing-deque-no-steal-loop

	# Thread pool
	thread-pool

	# Pending work items exist
	pending-work-items-exist
)

cfg=src/ch/ethz/intervals/Config.java

ITER=10

echo "$HOST ($CORES cores), stats=$STATS"
echo

function stats_begin {
        if ${STATS}
	then    
		if [ -e ${cfg} ]
		then
			sed -i 's/public static final boolean STATISTICS = false/public static final boolean STATISTICS = true/g' ${cfg}
		fi
	fi
}

function move_results {
	if [ -e results/${HOST}-20* ]
	then
		if ${STATS}
		then
			mv results/${HOST}-20* results/${HOST}-stats/${1}
		else
			mv results/${HOST}-20* results/${HOST}/${1}
		fi
	fi
}

function git_co_cfg {
	if [ -e ${cfg} ]
	then
		git co ${cfg}
	fi
}

# Removes old benchmark results
rm -f results/${HOST}-20*

# Intervals
for branch in ${branches[@]}; do
	cd ..
	git_co_cfg
	git co origin/${branch}
	stats_begin
	cd -
	NS="-1" ITERFAST=$ITER ITERSLOW=$ITER ./all-benchmarks
	move_results ${branch}
	echo
	echo
done

# Threads
cd ..
git_co_cfg
git co master
stats_begin
cd -
NS="${CORES}" ITERFAST=$ITER ITERSLOW=$ITER ./all-benchmarks
move_results "${CORES}-threads"
