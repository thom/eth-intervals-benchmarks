#!/bin/bash
: ${2?"Usage: $0 HOST CORES NO_LOCALITY STATS. Warning: Removes old benchmark logs results/${HOST}-20*"}

HOST=$1
CORES=$2
NO_LOCALITY=$3
STATS=$4

branches=(
	keep-alive-thread
	no-keep-alive-thread
	linked-blocking-deque
	shared-work-queue-yield
	shared-work-queue-semaphore
)

cfg=src/ch/ethz/intervals/Config.java

ITER=10

OPTS="-server -Xmx2048M -Xms2048M -Xss8M"
NUMA_OPTS="${OPTS} -XX:+UseNUMA"

echo "$HOST ($CORES cores), no_locality=$NO_LOCALITY, stats=$STATS"
echo

function locality_begin {
	if [ -e ${cfg} ]
	then
		capitalized_host=`echo $HOST | perl -ne 'print ucfirst($_)'`
		sed -i "s/public static final Places places = new MafushiPlaces()/public static final Places places = new ${capitalized_host}Places()/g" ${cfg}
	fi

        if ${NO_LOCALITY}
	then
		if [ -e ${cfg} ]
		then
			sed -i 's/public static final boolean AFFINITY = true/public static final boolean AFFINITY = false/g' ${cfg}
		fi
	fi
}

function stats_begin {
        if ${STATS}
	then    
		if [ -e ${cfg} ]
		then
			sed -i 's/public static final boolean STATISTICS = false/public static final boolean STATISTICS = true/g' ${cfg}
		fi
	fi
}

function move_results {
	if [ -e results/${HOST}-20* ]
	then
		if ${STATS}
		then
			mv results/${HOST}-20* results/${HOST}-stats/${1}
		else
			mv results/${HOST}-20* results/${HOST}/${1}
		fi
	fi
}

function git_co_cfg {
	if [ -e ${cfg} ]
	then
		git co ${cfg}
	fi
}

# Removes old benchmark results
rm -f results/${HOST}-20*

# Intervals
for branch in ${branches[@]}; do
	cd ..
	git_co_cfg
	git co origin/${branch}
	locality_begin
	stats_begin
	cd -
	JAVA_OPTS=${OPTS} NS="-1" ITERFAST=${ITER} ITERSLOW=${ITER} ./all-benchmarks
	move_results ${branch}
	echo
	echo
done

# Intervals (NUMA)
for branch in ${branches[@]}; do
	cd ..
	git_co_cfg
	git co origin/${branch}
	locality_begin
	stats_begin
	cd -
	JAVA_OPTS=${NUMA_OPTS} NS="-1" ITERFAST=${ITER} ITERSLOW=${ITER} ./all-benchmarks
	move_results "${branch}-numa"
	echo
	echo
done

# Threads
#cd ..
#git_co_cfg
#git co master
#locality_begin
#stats_begin
#cd -
#JAVA_OPTS=${OPTS} NS="${CORES}" ITERFAST=${ITER} ITERSLOW=${ITER} ./all-benchmarks
#move_results "${CORES}-threads"

# Threads (NUMA)
#cd ..
#git_co_cfg
#git co master
#locality_begin
#stats_begin
#cd -
#JAVA_OPTS=${NUMA_OPTS} NS="${CORES}" ITERFAST=${ITER} ITERSLOW=${ITER} ./all-benchmarks
#move_results "${CORES}-threads-numa"
